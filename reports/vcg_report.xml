<?xml version="1.0" encoding="utf-8"?><!--XML Export of VCG Results for directory: . Scanned for Java security issues.--><CodeIssueCollection><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\expressions\Add.java</FileName><Line>14</Line><CodeLine>public class Add implements IExpression {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\expressions\Const.java</FileName><Line>43</Line><CodeLine>public class Const implements IExpression {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\expressions\Div.java</FileName><Line>69</Line><CodeLine>public class Div implements IExpression {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\expressions\Mul.java</FileName><Line>116</Line><CodeLine>public class Mul implements IExpression {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\expressions\Sub.java</FileName><Line>145</Line><CodeLine>public class Sub implements IExpression {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\parser\ExpressionParser.java</FileName><Line>188</Line><CodeLine>public class ExpressionParser {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\main\java\org\jacoco\examples\parser\Main.java</FileName><Line>278</Line><CodeLine>public class Main {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\test\java\org\jacoco\examples\parser\ExpressionParserIT.java</FileName><Line>302</Line><CodeLine>public class ExpressionParserIT extends ExpressionParserTest {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\build\src\test\java\org\jacoco\examples\parser\ExpressionParserTest.java</FileName><Line>321</Line><CodeLine>public class ExpressionParserTest {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\CoreTutorial.java</FileName><Line>484</Line><CodeLine>	public static class TestTarget implements Runnable {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\CoreTutorial.java</FileName><Line>491</Line><CodeLine>			for (int i = 2; i * i &lt;= n; i++) {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\CoreTutorial.java</FileName><Line>504</Line><CodeLine>	public static class MemoryClassLoader extends ClassLoader {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\CoreTutorial.java</FileName><Line>604</Line><CodeLine>			for (int i = cc.getFirstLine(); i &lt;= cc.getLastLine(); i++) {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecDump.java</FileName><Line>734</Line><CodeLine>				count++;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no 'finally' block to release resources if an exception occurs, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecutionDataClient.java</FileName><Line>794</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>FileStream Opened Without Exception Handling</Title><Description>There appears to be no 'try' block to safely open the filestream, potentially resulting in server-side exceptions.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecutionDataClient.java</FileName><Line>794</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no release of resources in the 'finally' block, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecutionDataClient.java</FileName><Line>794</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no 'finally' block to release resources if an exception occurs, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecutionDataServer.java</FileName><Line>868</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no release of resources in the 'finally' block, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ExecutionDataServer.java</FileName><Line>868</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no 'finally' block to release resources if an exception occurs, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\MBeanClient.java</FileName><Line>986</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>FileStream Opened Without Exception Handling</Title><Description>There appears to be no 'try' block to safely open the filestream, potentially resulting in server-side exceptions.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\MBeanClient.java</FileName><Line>986</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no release of resources in the 'finally' block, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\MBeanClient.java</FileName><Line>986</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ReportGenerator.java</FileName><Line>1044</Line><CodeLine>public class ReportGenerator {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\320052310\Desktop\Test1\jacocoagent\doc\examples\java\ReportGenerator.java</FileName><Line>1141</Line><CodeLine>		for (int i = 0; i &lt; args.length; i++) {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\src\main\java\com\mathsclass\ArithmeticOperations.java</FileName><Line>1154</Line><CodeLine>public class ArithmeticOperations {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\320052310\Desktop\Test1\src\test\java\com\maths\ArithmeticOperationsTest.java</FileName><Line>1177</Line><CodeLine>public class ArithmeticOperationsTest {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue></CodeIssueCollection>